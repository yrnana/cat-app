generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          Role      @default(USER)
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                       String  @id @default(uuid())
  type                     String
  provider                 String
  providerAccountId        String
  userId                   String
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  refresh_token            String?
  refresh_token_expires_in Int?
  access_token             String?
  expires_in               Int?
  expires_at               Int?
  token_type               String?
  scope                    String?

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  expires      DateTime
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Place {
  id    Int     @id
  name  String
  lat   Float
  lng   Float
  event Event[]
}

model EventDate {
  startTime   DateTime
  endTime     DateTime
  closingTime DateTime?
  eventId     String
  event       Event     @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@id([eventId, startTime, endTime])
}

model Event {
  id          String      @id @default(uuid())
  name        String
  homepage    String
  placeId     Int
  place       Place       @relation(fields: [placeId], references: [id])
  placeDetail String?
  image       String?
  placeholder Bytes?
  dates       EventDate[]
}
